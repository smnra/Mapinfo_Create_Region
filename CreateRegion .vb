include "mapbasic.def"
include "menu.def"
include "Icons.def"
Declare Sub Main
Declare Sub button_sub1
Declare Sub button_exchange
Declare Function exchangeNode(currObj as Object,currTab as string,rowIndex as Integer) as integer
Declare Function exchangeNode1(currObj as Object) as integer
Type Region							'定义 type类型数据
	name as String
	id as String
	nodeCount as Integer			'region的几点数
	lng(255) as String				'经度数组
	lat(255) as String				'纬度数组
	list as String			 	'经纬度列表
	regObject as object		'存储Region 的对象数组
End Type
dim max_rows as Integer
Dim regions() as Region  '定义type 类型的数组 rigions() '最大下标为表的最大行数
Dim listCount as Integer
dim tmpList() as String
dim i,j,k as Integer
dim firstStr as String
dim lastStr as String
Dim tmpX,tmpY as String
dim nameCol as Alias
dim idCol as Alias
dim listCol as Alias
dim nodeCountCol as Alias
dim firstTable as Alias




Sub Main
	Create ButtonPad "CreateRegions"  As

	PushButton
  	Icon 104
      	Calling button_sub1
		HelpMsg "经纬度生成Regions"

	PushButton
  	Icon 94
      	Calling button_exchange
		HelpMsg "交换所选Region最后两个点的位置"

	Title "CreateRegions" 
	ToolbarPosition(0,1)
	Width 2
	Show
End Sub


Sub button_sub1

	onerror goto error_trap


firstTable = TableInfo(0, TAB_INFO_NAME)			'获得当前打开表的名称
max_rows = TableInfo(firstTable, TAB_INFO_NROWS)       '取表的最大行数
print(max_rows)
nameCol = firstTable + "." + "name"	
idCol = firstTable + "." + "id"	
nodeCountCol = firstTable + "." + "nodeCount"	
listCol = firstTable + "." + "list"	





Redim regions(max_rows)								'确定数组长度

for i=1 to max_rows Step 1									   '从表的第一行开始遍历表
    print 
	fetch rec i from firstTable								'从表的第一行开始遍历表
	regions(i).name = nameCol							'将将第一行的name字段复制给 regions(i).name 
	regions(i).id = idCol								'将将第一行的name字段复制给 regions(i).name
	regions(i).nodeCount = nodeCountCol				'把第一行的nodeCount的值赋给regions(i).nodeCount

	lastStr = listCol
	'note "list:" & listCol
	'print "list:" & listCol
	j = 0
  	do 
		j = j + 1
		firstStr = left$(lastStr,instr(1,lastStr,"|")-1)			   '前半部分保存在firstStr 
		lastStr= right$(lastStr,len(lastStr) - instr(1,lastStr,"|"))   '用第一个"|" 分割经纬度字符串,后半部分保存在lastStr

		'print "firstStr:____" & firstStr 


		if firstStr <> "" then														'如果firstStr 为空则说明已经到最后一组经纬度 则使用lastStr
			regions(i).lng(j) = left$(firstStr,instr(1,firstStr,";") - 1)				'一个经纬度组用";"分割,";"左边的保存为lng
			regions(i).lat(j) = right$(firstStr,len(firstStr) - instr(1,firstStr,";")) 	'";"右边的保存为lat   Val() 函数为字符转换为数字
		else
			regions(i).lng(j) = left$(lastStr,instr(1,lastStr,";") - 1)		'一个经纬度组用";"分割,";"前面的保存为lng
			regions(i).lat(j) = right$(lastStr,len(lastStr) - instr(1,lastStr,";"))		 '";"后面的保存为lat Val()为str转化为number
		End If

		'print "lon:____" & regions(i).lng(j)
		'print "lat:____" & regions(i).lat(j)
	Loop While firstStr <> ""


	Redim regions(i).lng(j)		'确认数组的长度
	Redim regions(i).lat(j)	
	regions(i).nodeCount = j		'确认多边形节点数
	'print regions(i).nodeCount

next






Create Table "RegionTab" (name Char(254),id Char(254),nodeCount Integer,list Char(254)) file ".\RegionTab.tab" TYPE NATIVE Charset "WindowsSimpChinese"
'创建一个  "RegionTab" 表格	保存在".\RegionTab.tab"		
Create Map For RegionTab CoordSys Earth Projection 1, 0		'创建根据RegionTab表格创建图层 


'此段为创建一个没有节点的Region 然后根据数组regions(i).lng(j) 和 regions(i).lat(j)向Region 中添加节点来生成一个多边形区域
for i=1 to max_rows Step 1		 

	fetch rec i from RegionTab									'将游标移动到RegionTab表的第i行
	Create Region Into Variable regions(i).regObject 0				' 生成一个空节点的Region对象
	
	For j = 1 to regions(i).nodeCount Step 1
		Alter Object regions(i).regObject Node Add (Val(regions(i).lng(j)),Val(regions(i).lat(j)))	'给空节点的Region对象里添加节点 
		regions(i).list = regions(i).list & regions(i).lng(j) & ";" & regions(i).lat(j) & "|"			'把经纬度数组拼接为经纬度列表
	Next
	
	Insert Into RegionTab(name,id,nodeCount,list,Object) 			'从regions(i)数组复制到RegionTab 表
		Values(regions(i).name, regions(i).id, regions(i).nodeCount,regions(i).list,regions(i).regObject)
Next


Commit Table RegionTab Interactive



done: 
  exit sub 
error_trap: 
   print(error$())
   resume done 
end sub








Sub button_exchange
	onerror goto error_trap
	dim re as String
	dim currRegion as object
	dim i ,j,k,selectRowNum as Integer
	Dim tmpRegion() as Region
	dim nodeCount as Integer
	dim lastLon,lastLat,last2ndLon,last2ndLat as string		'最后两个点的经纬度,last 和last2nd
    
	Select * from Selection into tmp
	selectRowNum = TableInfo(tmp, TAB_INFO_NROWS)       '获取所选区域的行数
	Redim tmpRegion(selectRowNum)

	for k=1 to selectRowNum  Step 1									   '从表的第一行开始遍历表
		fetch rec k from tmp
		currRegion = 	Selection.obj

        nodeCount = ObjectInfo(currRegion, OBJ_INFO_NPNTS) - 1 		'获取对象的节点数 region对象的第一个节点算两次
        Redim tmpRegion(k).lng(nodeCount)
        Redim tmpRegion(k).lat(nodeCount)

        for i=1 to nodeCount Step 1	 
            tmpRegion(k).lng(i) = Str$(ObjectNodeX(currRegion, 1, i) )				' 读取第i个节点的经度
            tmpRegion(k).lat(i) = Str$(ObjectNodeY(currRegion, 1, i) )				' 读取第i个个节点的纬度		
        next

        lastLon = tmpRegion(k).lng(nodeCount)
        lastLat = tmpRegion(k).lat(nodeCount)
        tmpRegion(k).lng(nodeCount) = tmpRegion(k).lng(nodeCount - 1) 
        tmpRegion(k).lat(nodeCount) = tmpRegion(k).lat(nodeCount - 1)
        tmpRegion(k).lng(nodeCount - 1) = lastLon
        tmpRegion(k).lat(nodeCount - 1) = lastLat







        Create Region Into Variable tmpRegion(k).regObject 0				' 生成一个空节点的Region对象
        
        For j = 1 to nodeCount Step 1
            Alter Object tmpRegion(k).regObject Node Add (Val(tmpRegion(k).lng(j)),Val(tmpRegion(k).lat(j)))		'给空节点的Region对象里添加节点 
            tmpRegion(k).list = tmpRegion(k).list & tmpRegion(k).lng(j) & ";" & tmpRegion(k).lat(j) & "|"			'把经纬度数组拼接为经纬度列表
        Next

        Update tmp Set list = tmpRegion(k).list, obj = tmpRegion(k).regObject    where rowid = k     '更新表的obj列为 新创建的Region对象 更新表的list列为tmpRegion.list


    next
	   
    
	done: 
  		exit sub 
	error_trap: 
   		print(error$())
   	resume done 

end Sub 










Function exchangeNode1(currObj as Object) as integer
	onerror goto error_trap

	dim nodeCount as Integer
	dim lastLon,lastLat,last2ndLon,last2ndLat as float		'最后两个点的经纬度,last 和last2nd
	nodeCount = ObjectInfo(currObj, OBJ_INFO_NPNTS) - 1 		'获取对象的节点数 region对象的第一个节点算两次
	lastLon = ObjectNodeX(currObj, 1, nodeCount) 				' 读取最后一个节点的经度
	lastLat = ObjectNodeY(currObj, 1, nodeCount) 				' 读取最后一个节点的纬度
	last2ndLon = ObjectNodeX(currObj, 1, nodeCount - 1) 				' 读取倒数第二个节点的经度
	last2ndLat = ObjectNodeY(currObj, 1, nodeCount - 1) 				' 读取倒数第二个节点的纬度

	Alter Object currObj 
		Node Set Position 1, nodeCount (last2ndLon,last2ndLat)			'设置倒数第一个点的位置为 倒数第二个点的经纬度
	Alter Object currObj 
		Node Set Position 1, nodeCount-1 (lastLon,lastLat)			'设置倒数第一个点的位置为 倒数第二个点的经纬度



	

	done: 
  		exit sub 
	error_trap: 
   		print(error$())
   	resume done 

end Function 


